name: common
version: 1.0
lang: go
exec: main
steps:
  webhook_get@1.0:
    description: Performs a GET webhook
    inputs:
      Url:
        required: true
        description: ""
        sample:
    outputs:
      ResponseBody:
        description: ""
        sample:
  webhook_post@1.0:
    description: Posts a webhook
    inputs:
      Body:
        required: true
        description: ""
      ContentType:
        required: true
        description: ""
      Url:
        required: true
        description: ""
    outputs:
      ResponseBody:
        description: ""
  filter@1.0:
    inputs:
      Records:
        required: true
        description: The list of records you would like to filter
      Filter:
        required: true
        description: The filter you would like to apply. The filter must be in javascript format. Referencing the record must start with `record`
        sample: record.firstName == 'matthew'
    outputs:
      Records:
        description: The filtered records
  file_read_lines@1.0:
    inputs:
      FilePath:
        required: true
        description: The local file path that you would like to parse.
      FieldNames:
        required: false
        description: The field names that will be used in mapping each line to an object. Can be omitted if using headers as field names.
      UseHeaderAsFieldNames:
        required: true
        description: A flag indicating whether or not field names are being passed in or parsed from the file headers.
      FieldDelimiter:
        required: true
        description: The string delimiter used to separate fields in a line
    outputs:
      Records:
        description: Each line of the file as a list of map objects
  parse_json_object@1.0:
    inputs:
      String:
        required: true
        description: The string to parse into a json object
        samp: '{"key" : "value"}'
    outputs:
      Record:
        description: The json object

